require('dotenv').config();
const WfirmaClient = require('./src/services/wfirma');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
process.env.WFIRMA_APP_KEY = '8e76feba50499c61fddd0905b4f310ea';
process.env.WFIRMA_ACCESS_KEY = 'b90c19c9d6926305725556800560268f';
process.env.WFIRMA_SECRET_KEY = 'd096f54b74c3f4adeb2fd4ab362cd085';
process.env.WFIRMA_BASE_URL = 'https://api2.wfirma.pl';

async function verifyProformaDocument() {
  console.log('üîç Verifying Proforma document type...\n');

  const wfirmaClient = new WfirmaClient();
  
  // ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  const invoiceId = '388491190';
  
  try {
    console.log(`1. Fetching invoice ${invoiceId} details...`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const response = await wfirmaClient.request('GET', `/invoices/${invoiceId}`);
    
    if (response.success && response.data) {
      console.log('‚úÖ Invoice details fetched successfully');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
      const invoice = response.data.invoice || response.data;
      
      console.log('\nüìÑ Document Details:');
      console.log('='.repeat(50));
      console.log(`   ID: ${invoice.id || 'N/A'}`);
      console.log(`   Number: ${invoice.number || 'N/A'}`);
      console.log(`   Kind: ${invoice.kind || 'N/A'}`);
      console.log(`   Type: ${invoice.type || 'N/A'}`);
      console.log(`   Status: ${invoice.status || 'N/A'}`);
      console.log(`   Issue Date: ${invoice.issue_date || invoice.date || 'N/A'}`);
      console.log(`   Payment Date: ${invoice.payment_date || invoice.paymentdate || 'N/A'}`);
      console.log(`   Currency: ${invoice.currency || 'N/A'}`);
      console.log(`   Total: ${invoice.total || invoice.amount || 'N/A'}`);
      console.log('='.repeat(50));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ Proforma
      const isProforma = invoice.kind === 'proforma' || 
                        invoice.type === 'proforma' ||
                        (invoice.number && invoice.number.includes('PRO'));
      
      if (isProforma) {
        console.log('\n‚úÖ SUCCESS: Document is confirmed as PROFORMA!');
        console.log(`   Document kind: ${invoice.kind}`);
      } else {
        console.log('\n‚ùå WARNING: Document does not appear to be a Proforma');
        console.log(`   Document kind: ${invoice.kind}`);
        console.log(`   Document type: ${invoice.type}`);
      }
      
      // –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('\nüîß Full API Response:');
      console.log(JSON.stringify(response.data, null, 2));
      
    } else {
      console.log('‚ùå Failed to fetch invoice details:', response.error);
    }
    
  } catch (error) {
    console.log('‚ùå Error verifying document:', error.message);
    if (error.response) {
      console.log('   Status:', error.response.status);
      console.log('   Data:', error.response.data);
    }
  }
  
  console.log('\nüèÅ Verification completed\n');
}

verifyProformaDocument();




