#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç OAuth 2.0 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ wFirma
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ access token
 */

require('dotenv').config();
const WfirmaClient = require('./src/services/wfirma');
const logger = require('./src/utils/logger');

async function testOAuthAuthorization() {
  console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth 2.0 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ wFirma...\n');

  try {
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    const wfirmaClient = new WfirmaClient();
    
    console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
    console.log(`   Client ID: ${process.env.WFIRMA_CLIENT_ID ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    console.log(`   Client Secret: ${process.env.WFIRMA_CLIENT_SECRET ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    console.log(`   Access Token: ${process.env.WFIRMA_ACCESS_TOKEN ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    console.log(`   Base URL: ${process.env.WFIRMA_BASE_URL || 'https://api2.wfirma.pl'}\n`);

    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è access token
    console.log('üîë –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ Access Token...');
    const tokenResult = await wfirmaClient.getAccessToken();
    
    if (tokenResult.success) {
      console.log('‚úÖ Access Token –¥–æ—Å—Ç—É–ø–µ–Ω:', tokenResult.access_token?.substring(0, 20) + '...');
    } else {
      console.log('‚ö†Ô∏è  Access Token –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', tokenResult.error);
      if (tokenResult.auth_url) {
        console.log('üîó URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', tokenResult.auth_url);
        console.log('\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:');
        console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        console.log('2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ wFirma');
        console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ redirect URL');
        console.log('4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è access token\n');
      }
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
    console.log('üåê –¢–µ—Å—Ç 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ wFirma API...');
    const connectionResult = await wfirmaClient.testConnection();
    
    if (connectionResult.success) {
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', connectionResult.message);
      if (connectionResult.data) {
        console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(connectionResult.data, null, 2));
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', connectionResult.error);
      if (connectionResult.auth_url) {
        console.log('üîó –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:', connectionResult.auth_url);
      }
      if (connectionResult.details) {
        console.log('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', JSON.stringify(connectionResult.details, null, 2));
      }
    }

    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤
    console.log('\nüë• –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤...');
    const contractorsResult = await wfirmaClient.getContractors();
    
    if (contractorsResult.success) {
      console.log('‚úÖ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
      if (contractorsResult.contractors) {
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤: ${contractorsResult.contractors.length}`);
      }
      if (contractorsResult.rawResponse) {
        console.log('üìÑ XML –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞)');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤:', contractorsResult.error);
      if (contractorsResult.auth_url) {
        console.log('üîó –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:', contractorsResult.auth_url);
      }
    }

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error('üìã Stack trace:', error.stack);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testOAuthAuthorization()
    .then(() => {
      console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nüí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π:', error.message);
      process.exit(1);
    });
}

module.exports = testOAuthAuthorization;






